# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/will-of-the-prophets
    docker:
      - image: circleci/python:3.9
        environment:
          DATABASE_URL: postgresql://will_of_the_prophets:security_is_important@localhost/will_of_the_prophets
          DATABASE_NO_SSL_REQUIRE: True
      - image: circleci/postgres:11
        environment:
          POSTGRES_USER: will_of_the_prophets
          POSTGRES_PASSWORD: security_is_important
          POSTGRES_DB: will_of_the_prophets

    environment:
      SECRET_KEY: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789

    steps:
      - checkout

      - run:
          name: install dependencies
          command: |
            sudo apt-get -y install libenchant1c2a npm libgtk2.0-0 libgtk-3-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
            pip install --requirement requirements.txt
            npm ci

      - run:
          name: collect static files
          command: python manage.py collectstatic --no-input

      - run:
          name: run tests
          command: pytest --log-level DEBUG

      - run:
          name: run end-to-end tests
          environment:
            DJANGO_SUPERUSER_USERNAME: rollinguser
            DJANGO_SUPERUSER_PASSWORD: "rolling user password"
            DJANGO_SUPERUSER_EMAIL: nobody@example.com
            DEBUG: 1
            DISABLE_DEBUG_TOOLBAR: 1
          command: |
            python manage.py migrate
            python manage.py createsuperuser --noinput
            python manage.py runserver & npm run wait-on http://localhost:8000
            npm run cypress run

      - store_artifacts:
          path: ~/will-of-the-prophets/cypress/videos/

      - store_artifacts:
          path: ~/will-of-the-prophets/cypress/screenshots/

      - run:
          name: deployment check
          command: python manage.py check --deploy --fail-level INFO

      - run:
          name: check for missing migrations
          command: python manage.py makemigrations --check

      - run:
          name: check code formatting
          command: |
            npm run prettier -- **/*.scss --check
            npm run prettier -- **/*.js --check
            black --check --diff .
            isort --check-only
            find . -iname "*.py" | xargs pylint

      - run:
          name: check CSS
          command: |
            python manage.py compilescss
            git diff --no-ext-diff --exit-code
