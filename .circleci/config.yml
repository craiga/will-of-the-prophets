version: 2.1

jobs:
  setup:
    docker:
      - image: circleci/python:3.8
        environment:
          DATABASE_URL: postgresql://will_of_the_prophets:security_is_important@localhost/will_of_the_prophets
          DATABASE_NO_SSL_REQUIRE: True
          SECRET_KEY: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
          PIPENV_VENV_IN_PROJECT: True
    steps:
      - checkout
      - run: |
          sudo pip install pipenv
          pipenv install --dev
      - save_cache:
          paths:
            - ~/project
          key: will-of-the-prophets-{{ .Revision }}

  cypress:
    docker:
      - image: circleci/python:3.8
        environment:
          DATABASE_URL: postgresql://will_of_the_prophets:security_is_important@localhost/will_of_the_prophets
          DATABASE_NO_SSL_REQUIRE: True
          SECRET_KEY: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
          PIPENV_VENV_IN_PROJECT: True
      - image: circleci/postgres:11
        environment:
          POSTGRES_USER: will_of_the_prophets
          POSTGRES_PASSWORD: security_is_important
          POSTGRES_DB: will_of_the_prophets
    steps:
      - restore_cache:
          key: will-of-the-prophets-{{ .Revision }}
      - run:
          environment:
            DJANGO_SUPERUSER_USERNAME: rollinguser
            DJANGO_SUPERUSER_PASSWORD: "rolling user password"
            DJANGO_SUPERUSER_EMAIL: nobody@example.com
            DEBUG: 1
            DISABLE_DEBUG_TOOLBAR: 1
          command: |
            sudo apt-get -y install npm libgtk2.0-0 libgtk-3-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
            npm ci
            pipenv run python manage.py migrate
            pipenv run python manage.py createsuperuser --noinput
            pipenv run python manage.py runserver & npm run wait-on http://localhost:8000
            npm run cypress run

  pytest:
    docker:
      - image: circleci/python:3.8
        environment:
          DATABASE_URL: postgresql://will_of_the_prophets:security_is_important@localhost/will_of_the_prophets
          DATABASE_NO_SSL_REQUIRE: True
          SECRET_KEY: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
          PIPENV_VENV_IN_PROJECT: True
      - image: circleci/postgres:11
        environment:
          POSTGRES_USER: will_of_the_prophets
          POSTGRES_PASSWORD: security_is_important
          POSTGRES_DB: will_of_the_prophets
    steps:
      - restore_cache:
          key: will-of-the-prophets-{{ .Revision }}
      - run: |
          pipenv run python manage.py collectstatic
          pipenv run pytest --log-level DEBUG

  deploy_check:
    docker:
      - image: circleci/python:3.8
        environment:
          DATABASE_URL: postgresql://will_of_the_prophets:security_is_important@localhost/will_of_the_prophets
          DATABASE_NO_SSL_REQUIRE: True
          SECRET_KEY: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
          PIPENV_VENV_IN_PROJECT: True
    steps:
      - restore_cache:
          key: will-of-the-prophets-{{ .Revision }}
      - run: pipenv run python manage.py check --deploy --fail-level INFO

  missing_migrations:
    docker:
      - image: circleci/python:3.8
        environment:
          DATABASE_URL: postgresql://will_of_the_prophets:security_is_important@localhost/will_of_the_prophets
          DATABASE_NO_SSL_REQUIRE: True
          SECRET_KEY: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
          PIPENV_VENV_IN_PROJECT: True
      - image: circleci/postgres:11
        environment:
          POSTGRES_USER: will_of_the_prophets
          POSTGRES_PASSWORD: security_is_important
          POSTGRES_DB: will_of_the_prophets
    steps:
      - restore_cache:
          key: will-of-the-prophets-{{ .Revision }}
      - run: pipenv run python manage.py makemigrations --check

  python_formatting:
    docker:
      - image: circleci/python:3.8
        environment:
          DATABASE_URL: postgresql://will_of_the_prophets:security_is_important@localhost/will_of_the_prophets
          DATABASE_NO_SSL_REQUIRE: True
          SECRET_KEY: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
          PIPENV_VENV_IN_PROJECT: True
    steps:
      - restore_cache:
          key: will-of-the-prophets-{{ .Revision }}
      - run:
          command: |
              pipenv run black --check --diff .
              pipenv run isort --check-only

  python_linting:
    docker:
      - image: circleci/python:3.8
        environment:
          DATABASE_URL: postgresql://will_of_the_prophets:security_is_important@localhost/will_of_the_prophets
          DATABASE_NO_SSL_REQUIRE: True
          SECRET_KEY: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
          PIPENV_VENV_IN_PROJECT: True
    steps:
      - restore_cache:
          key: will-of-the-prophets-{{ .Revision }}
      - run:
          command: |
            sudo apt-get -y install libenchant1c2a
            find . -path ./.venv -prune -o -iname "*.py" -print
            find . -path ./.venv -prune -o -iname "*.py" -print | xargs pipenv run pylint

  check_css_build:
    docker:
      - image: circleci/python:3.8
        environment:
          DATABASE_URL: postgresql://will_of_the_prophets:security_is_important@localhost/will_of_the_prophets
          DATABASE_NO_SSL_REQUIRE: True
          SECRET_KEY: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
          PIPENV_VENV_IN_PROJECT: True
    steps:
      - restore_cache:
          key: will-of-the-prophets-{{ .Revision }}
      - run:
          command: |
            pipenv run python manage.py compilescss
            git diff --no-ext-diff --exit-code


workflows:
  version: 2
  test:
    jobs:
      - setup
      - cypress:
          requires:
            - setup
      - pytest:
          requires:
            - setup
      - deploy_check:
          requires:
            - setup
      - missing_migrations:
          requires:
            - setup
      - python_formatting:
          requires:
            - setup
      - python_linting:
          requires:
            - setup
      - check_css_build:
          requires:
            - setup
